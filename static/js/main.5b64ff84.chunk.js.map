{"version":3,"sources":["data/ApiListUser.js","data/List.js","App.js","serviceWorker.js","index.js"],"names":["AppList","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","items","isLoading","_this2","fetch","then","response","json","data","setState","_this$state","react_default","a","createElement","map","item","index","key","name","address","city","Component","Daftar","params","values","App","param","handleSubmit","event","preventDefault","concat","toConsumableArray","todoItem","handleChange","target","value","onSubmit","onChange","Home","ListView","Link","to","noMatch","DetailView","_ref","match","jeneng","ListTableUsers","App_Column","Column","Fragment","React","BrowserRouter","Switch","Route","path","exact","component","ApiList","ListUsers","Boolean","window","location","hostname","ReactDOM","render","src_App_0","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.5b64ff84.chunk.js","sourcesContent":["import React, {Component} from 'react';\r\n\r\nclass AppList extends Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            items: [],\r\n            isLoading: true\r\n        }\r\n    }\r\n\r\n    /* Lift cycle = otomatis menjalankan component jika sudah siap atau di save */\r\n    componentDidMount() {\r\n        fetch(\"https://jsonplaceholder.typicode.com/users\")\r\n            .then(response => response.json())\r\n            .then(data => this.setState({ items: data, isLoading: false }))\r\n    }\r\n\r\n    render() {\r\n\r\n        const { items, isLoading } = this.state\r\n\r\n        if (isLoading) {\r\n            return <p>Loading.......</p>\r\n        }\r\n\r\n        return (\r\n            <div>\r\n                <ul>\r\n                    {\r\n                        items.map((item, index) =>\r\n                            <li key={index}> Name: {item.name} => City: {item.address.city}</li>\r\n                        )\r\n                    }\r\n                </ul>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default AppList;","import React, {Component} from 'react';\r\n\r\nfunction Daftar(params) {\r\n    return (\r\n        <ul>\r\n            { params.values.map((item, index) => <li key={index}> {item} || {index} </li> ) }\r\n        </ul>\r\n    )\r\n}\r\n\r\nclass App extends Component {\r\n\r\n    constructor(param) {\r\n        super(param)\r\n        this.state = {\r\n            todoItem: '',\r\n            items: [],\r\n        }\r\n    }\r\n\r\n    handleSubmit = (event) => {\r\n        event.preventDefault()\r\n        this.setState({\r\n            items: [...this.state.items, this.state.todoItem],\r\n            todoItem: \"\"\r\n        })\r\n    }\r\n\r\n    handleChange = (event) => {\r\n        this.setState({\r\n            todoItem: event.target.value\r\n        })\r\n        // console.log(this.state.todoItem)\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <br />\r\n                <form onSubmit={this.handleSubmit}>\r\n                    <input value={this.state.todoItem} onChange={this.handleChange} />\r\n                    <button>Add</button>\r\n                </form>\r\n\r\n                <Daftar values={this.state.items} />\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\n\r\nexport default App;","import React, { Component } from 'react';\nimport {BrowserRouter, Switch, Route, Link} from 'react-router-dom';\nimport './App.css';\nimport ApiList from './data/ApiListUser.js';\nimport ListUsers from './data/List.js';\n\nfunction Home() {\n    return <h2>Halaman Home</h2>\n}\n\nfunction ListView() {\n    return ( \n                <div>\n                    <h2>Halaman pengguna atau users</h2> \n                    {/* link dinamis */}\n                    <Link to=\"user/gojak\">Gojak</Link> <br />\n                    <Link to=\"user/bambang\">Bambang</Link>\n                </div>\n            )\n}\n\nfunction noMatch() {\n    return <h2>404, Halaman tidak di temukan</h2>\n}\n\nfunction DetailView({match}) {\n    return <h2>Selamat Datang {match.params.jeneng}</h2>\n}\n\nfunction ListTableUsers() {\n    return (\n        <div>\n            <table>\n                <thead>\n                    <tr>\n                        <th>No</th>\n                        <th>Nama/jeneng</th>\n                    </tr>\n                </thead>\n                <tbody>\n                    <Column />\n                </tbody>\n            </table>\n        </div>\n    )\n}\n\nclass Column extends React.Component {\n    render() {\n        return (\n            <React.Fragment>\n                <tr>\n                    <td>1</td>\n                    <td>Gojak</td>\n                </tr>\n                <tr>\n                    <td>2</td>\n                    <td>Bambang</td>\n                </tr>\n            </React.Fragment>\n        )\n    }\n}\n\nclass App extends Component {\n    \n    render() {\n        return (\n                <BrowserRouter>\n                    <div>\n                        <nav>\n                            <li><Link to=\"/\" >Home</Link></li>\n                            <li><Link to=\"/users\" >Users</Link></li>\n                            <li><Link to=\"/users/listtable\">Data Table Users</Link></li>\n                            <li><Link to=\"/users/apilist\">Api Users</Link></li>\n                            <li><Link to=\"/formdata\">Form Data</Link></li>\n                        </nav>\n\n                        <main>\n                            <Switch>\n                                <Route path=\"/\" exact component={Home} />\n                                <Route path=\"/users\" exact component={ListView} />\n                                <Route path=\"/user/:jeneng\" exact component={DetailView} />\n                                <Route path=\"/users/listtable\" exact component={ListTableUsers} />\n                                <Route path=\"/users/apilist\" exact component={ApiList} />\n                                <Route path=\"/formdata\" exact component={ListUsers} />\n                                <Route component={noMatch} />\n                            </Switch>\n                        </main>\n                    </div>\n                </BrowserRouter>\n        );\n    }\n}\n\n/* Next 7.konsumsi Api dengan react */\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}